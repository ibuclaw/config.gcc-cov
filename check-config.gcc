#/bin/bash
ac_cv_prog_CPP=/usr/bin/cpp
srcdir=./gcc/gcc
host=`./gcc/config.guess`

# This long list of targets has been taken from contrib/config-list.mk.
for short_target in \
  aarch64-elf \
  aarch64-freebsd13 \
  aarch64-fuchsia \
  aarch64-linux-gnu \
  aarch64-netbsd \
  aarch64-rtems \
  aarch64-wrs-vxworks \
  aarch64_be-elf \
  aarch64_be-linux-gnu \
  alpha64-dec-vms \
  alphaev56-linux-gnu \
  alphaev67-linux-gnu \
  alphaev5-linux-gnu \
  alphaev6-linux-gnu \
  alphapca56-linux-gnu \
  alpha-dec-vms \
  alpha-linux-gnu \
  alpha-netbsd \
  alpha-openbsd \
  am33_2.0-linux-gnu \
  amdgcn-amdhsa \
  arceb-elf32OPT-with-cpu=arc700 \
  arceb-linux-uclibcOPT-with-cpu=arc700 \
  arc-elf32OPT-with-cpu=arc600 \
  arc-elf32OPT-with-cpu=arc700 \
  arc-linux-uclibcOPT-with-cpu=arc700 \
  armeb-eabi \
  armeb-freebsd10 \
  armeb-netbsdelf \
  armv6-freebsd10 \
  armv6-netbsdelf \
  armv7-freebsd10 \
  armv7-netbsdelf \
  arm-eabi \
  arm-elf-uclinuxfdpiceabi \
  arm-elf-uclinuxfdpiceabihf \
  arm-freebsd12 \
  arm-fuchsia \
  arm-linux-androideabi \
  arm-netbsdelf \
  arm-netbsdelf-eabihf \
  arm-phoenix \
  arm-rtems \
  arm-symbianelf \
  arm-uclinux_eabi\
  arm-wrs-vxworks7 \
  athlon-pc-linux-gnu \
  avr-elf \
  bfin-elf \
  bfin-linux-uclibc \
  bfin-openbsd \
  bfin-rtems \
  bfin-uclinux \
  bpf-unknown-none \
  c6x-elf \
  c6x-uclinux \
  cris-elf \
  csky-elf \
  csky-linux-gnu \
  csky-linux-uclibc \
  epiphany-elf \
  epiphany-elfOPT-with-stack-offset=16 \
  epiphany-rtems \
  fido-elf \
  fr30-elf \
  frv-elf \
  frv-linux \
  ft32-elf \
  h8300-elf \
  h8300-linux \
  hppa64-hpux11.0OPT-enable-sjlj-exceptions=yes \
  hppa64-hpux11.1 \
  hppa64-hpux11.3 \
  hppa64-linux-gnu \
  hppa-linux-gnu \
  hppa-linux-gnuOPT-enable-sjlj-exceptions=yes \
  hppa-netbsd \
  hppa-openbsd \
  k6-pc-linux-gnu \
  i386-elfiamcu \
  i386-rdos \
  i386-freebsd5 \
  i386-freebsd13 \
  i386-netbsdelf \
  i586-pc-linux-gnu \
  i686-apple-darwin13 \
  i686-apple-darwin17 \
  i686-apple-darwin9 \
  i686-cygwinOPT-enable-threads=yes \
  i686-dragonflybsd \
  i686-elf \
  i686-freebsd13 \
  i686-kfreebsd-gnu \
  i686-kopensolaris-gnu \
  i686-lynxos \
  i686-mingw32crt \
  i686-w64-mingw32 \
  i686-netbsdelf9 \
  i686-nto-qnx \
  i686-openbsd \
  i686-pc-linux-gnu \
  i686-pc-linuxOPT-enable-targets=all \
  i686-pc-msdosdjgpp \
  i686-rtems \
  i686-solaris2.11 \
  i686-gnu \
  i686-wrs-vxworks \
  i686-wrs-vxworksae \
  ia64-elfOPT-enable-obsolete \
  ia64-hpuxOPT-enable-obsolete \
  ia64-hpux11.3OPT-enable-obsolete \
  ia64-hp-vmsOPT-enable-obsolete \
  ia64-linuxOPT-enable-obsolete \
  iq2000-elf \
  lm32-elf \
  lm32-rtems \
  lm32-uclinux \
  loongarch64-linux-gnuf32 \
  loongarch64-linux-gnuf64 \
  loongarch64-linux-gnusf \
  m32c-elf \
  m32r-elf \
  m32rle-elf \
  m68k-elf \
  m68k-linux \
  m68k-netbsdelf \
  m68k-rtems \
  m68k-uclinux \
  mcore-elf \
  microblaze-elf \
  microblaze-linux \
  microblaze-rtems \
  microblazeel-elf \
  microblazeel-linux \
  microblazeel-rtems \
  mips64-elf \
  mips64-linux-gnuabi64 \
  mips64el-st-linux-gnu \
  mips64octeon-linux \
  mips64orion-elf \
  mips64r5900-elf \
  mips64vr-elf \
  mips-img-elf \
  mips-img-linux \
  mipsel-elf \
  mipsisa32-elfoabi \
  mipsisa32-linux-gnu \
  mipsisa32r2-linux-gnu \
  mipsisa32r6-linux-gnu \
  mipsisa64-elfoabi \
  mipsisa64-linux-gnu \
  mipsisa32r2el-elf \
  mipsisa32r6el-elf \
  mipsisa64r2el-elf \
  mipsisa64r6el-elf \
  mipsisa64r2-linux \
  mipsisa64r2-linux-gnuabi64 \
  mipsisa32r2-sde-elf \
  mipsisa32r6-sde-elf \
  mipsisa32-sde-elf \
  mipsisa64r2-sde-elf \
  mipsisa64r6-sde-elf \
  mipsisa64-sde-elf \
  mipsisa64r6-linux \
  mipsisa64r6-linux-gnuabi64 \
  mipsisa64sb1-elf \
  mipsisa64sr71k-elf \
  mips-linuxOPT-enable-targets=all \
  mips-mti-elf \
  mips-mti-linux \
  mips-netbsd \
  mips-rtems \
  mipstx39-elf \
  mips-wrs-vxworks \
  mmix-knuth-mmixware \
  mn10300-elf \
  moxie-elf \
  moxie-moxiebox \
  moxie-rtems \
  moxie-uclinux \
  msp430-elf \
  msp430-elfbare \
  nds32be-elf \
  nds32le-elf \
  nds32le-linux-gnu \
  nios2-elf \
  nios2-linux-gnu \
  nios2-rtems \
  nvptx-none \
  or1k-elf \
  or1k-linux-musl \
  or1k-linux-uclibc \
  or1k-rtems \
  pdp11-aout \
  pentium2-pc-linux-gnu \
  pentium3-pc-linux-gnu \
  pentium4-pc-linux-gnu \
  pentium4-pc-linux-gnu \
  pentiumpro-pc-linux-gnu \
  powerpc64-apple-darwin9 \
  powerpc64-freebsd13 \
  powerpc64-linux_altivec \
  powerpc64-linux-musl \
  powerpc-apple-darwin8 \
  powerpc-apple-darwin9 \
  powerpc-darwin4 \
  powerpc-darwin7 \
  powerpc-eabi \
  powerpc-eabialtivec \
  powerpc-eabisim \
  powerpc-eabisimaltivec \
  powerpc-freebsd13 \
  powerpcle-freebsd13 \
  powerpc-ibm-aix7.1 \
  powerpc-ibm-aix7.2 \
  powerpcle-eabi \
  powerpcle-eabisim \
  powerpcle-elf \
  powerpcle-linuxOPT-enable-targets=all \
  powerpc-linuxOPT-enable-targets=all \
  powerpc-lynxos \
  powerpc-netbsd \
  powerpc-rtems \
  powerpc-wrs-vxworks \
  powerpc-wrs-vxworks7r \
  powerpc-wrs-vxworksae \
  powerpc-wrs-vxworksmils \
  powerpc-xilinx-eabi \
  ppc-elf \
  pru-elf \
  riscv32be-freebsd12 \
  riscv32-unknown-linux-gnu \
  riscv64be-unknown-linux-gnu \
  riscv64be-elf \
  riscv64-freebsd12 \
  riscv64-rtems \
  riscv64-unknown-linux-gnu \
  rl78-elf \
  rs6000-ibm-aix7.1 \
  rs6000-ibm-aix7.1.3.0 \
  rs6000-ibm-aix7.2.0.0 \
  rx-elf \
  rx-linux \
  s390-linux-gnu \
  s390-linux-gnuOPT-enable-targets=all \
  s390x-ibm-tpf \
  s390x-linux-gnu \
  sh-elf \
  sh2a-elf \
  sh2e-elf \
  sh3e-elf \
  sh4a-elf \
  sh4ael-elf \
  sh2-linux \
  sh4-linux \
  sh4be-linux \
  shbe-linux \
  shle-linux \
  sh-netbsdelf \
  sh-rtems \
  sh-superh-elf \
  sh-wrs-vxworks \
  sparc64-elf \
  sparc64-linux \
  sparc64-netbsd \
  sparc64-openbsd \
  sparc64-rtems \
  sparc64-sun-solaris2.11OPT-with-gnu-ldOPT-with-gnu-asOPT-enable-threads=posix \
  sparc-elf \
  sparc-leon-linux-gnu \
  sparc-leon3-linux-gnuOPT-enable-targets=all \
  sparc-leon-elf \
  sparc-leon3v7-elf \
  sparc-linux-gnu \
  sparc-netbsdelf \
  sparc-rtems \
  sparc-sun-solaris2.11 \
  sparc-elf \
  sparc-wrs-vxworks \
  v850e1-elf \
  v850e2-elf \
  v850e2v3-elf \
  v850e-elf \
  v850-elf \
  v850-rtems \
  vax-linux-gnu \
  vax-netbsdelf \
  visium-elf \
  x86_64-apple-darwin10 \
  x86_64-apple-darwin15 \
  x86_64-apple-darwin21 \
  x86_64-cygwinOPT-enable-threads=yes \
  x86_64-dragonflybsd \
  x86_64-elfOPT-with-fpmath=sse \
  x86_64-freebsd13 \
  x86_64-fuchsia \
  x86_64-gnu \
  x86_64-kfreebsd-gnu \
  x86_64-mingw32OPT-enable-sjlj-exceptions=yes \
  x86_64-netbsd \
  x86_64-openbsd \
  x86_64-pc-linux-gnuOPT-with-fpmath=avx \
  x86_64-rdos \
  x86_64-rtems \
  x86_64-w64-mingw32 \
  x86_64-w64-mingw32OPT-enable-targets=all \
  x86_64-wrs-vxworks7 \
  xstormy16-elf \
  xtensa-elf \
  xtensa-linux \
  xtensa-uclinux
do
    # Reset or remove any residue environment settings that the previous
    # config.gcc run might have added.
    gas_flag=no
    gnu_ld_flag=no
    enable_obsolete=no
    enable_multilib=no
    with_endian=
    with_multilib_default=
    with_multilib_generator=default
    with_multilib_list=default

    # Get our canonicalized target.
    target_noncanonical=`echo ${short_target} | awk 'BEGIN { FS = "OPT" }; { print $1 }'`
    target=`./gcc/config.sub ${target_noncanonical}`
    
    # Parse any extra configure OPTs in the target string.
    target_with_configure_opts=(`echo ${short_target} | sed 's/OPT-/ /g'`)
    if `echo ${target_with_configure_opts[@]} | grep -q "with-gnu-as"`; then
	gas_flag=yes
	target_with_configure_opts=(`printf '%s\n' ${target_with_configure_opts[@]} | grep -v "with-gnu-as"`)
    fi
    if `echo ${target_with_configure_opts[@]} | grep -q "with-gnu-ld"`; then
	gnu_ld_flag=yes
	target_with_configure_opts=(`printf '%s\n' ${target_with_configure_opts[@]} | grep -v "with-gnu-ld"`)
    fi
    if `echo ${target_with_configure_opts[@]} | grep -q "enable-obsolete"`; then
	enable_obsolete=yes
	target_with_configure_opts=(`printf '%s\n' ${target_with_configure_opts[@]} | grep -v "enable-obsolete"`)
    fi

    # All other configure options that don't require any special handling.
    enable_configure_opts=(`echo ${target_with_configure_opts[@]:1} | sed 's/-/_/g'`)
    eval ${enable_configure_opts[@]}

    #echo "${short_target} - ${target}"
    . gcc/gcc/config.gcc

    # Clean-up
    disable_configure_opts=(`echo ${enable_configure_opts[@]} | sed 's/=[^ ]*/=/g'`)
    eval ${disable_configure_opts[@]}
    for option in $all_defaults; do
	eval "with_"`echo $option | sed s/-/_/g`"="
    done
done
